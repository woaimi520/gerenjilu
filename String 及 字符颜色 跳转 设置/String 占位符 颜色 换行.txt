%N$X 
  N 标识占用哪个位置 从 1开始
  X d:int s：字符串 f:.2f 小数点后两个数字 不会四舍五入
  
最普通的  
1

  <string name="string_test_1">学号：%1$d ;姓名：%2$s ;成绩：%3$.2f</string>  
2  
  Logger.d("alarm  " + String.format(getString(R.string.string_test_1), 123, "renyu", 92.3333));//正确的
  打印 学号：123 ;姓名：renyu ;成绩：92.33
  
 完
1 
String.XML
     <array name="list">
        <item name = "item1">我是列表1，买身价为%1$1.2f元</item>  //这里的占位是相对一行的
        <item name = "item2">我是列表2，买身价为%1$1.2f元</item>
        <item name = "item3">我是列表3，买身价为%1$1.2f元</item>
    </array>
	

	
2.	
 String arr[] = getResources().getStringArray(R.array.list);//这里是不是写到string中  都是用 R.array. 且 没有getStringArray 只能 getResources().getStringArray
                for(int i=0;i<arr.length;i++){
                    Logger.d("alarm  " + String.format(arr[i],66.7777));
                }
				
打印
2019-09-06 14:20:44.422 1216-1216/com.renyu.administrator.redwineapplication D/PRETTY_LOGGER: │ alarm  我是列表1，买身价为66.78元
2019-09-06 14:20:44.423 1216-1216/com.renyu.administrator.redwineapplication D/PRETTY_LOGGER: │ alarm  我是列表2，买身价为66.78元
2019-09-06 14:20:44.424 1216-1216/com.renyu.administrator.redwineapplication D/PRETTY_LOGGER: │ alarm  我是列表3，买身价为66.78元
				
完

部分变色

1
String.XML
在需要变色部分 添加  <![CDATA[<font color="#D81B60">    </font>]]> //这里颜色值不能应用color中的 所以有弊端
<string name="string_test_2">学号：%1$d ;姓名： <![CDATA[<font color="#D81B60">  %2$s  </font>]]> ;成绩：%3$.2f</string>

2
rxtest.setText( Html.fromHtml(String.format(getString(R.string.string_test_2), 123, "renyu", 92.3373)));
打印
//学号：123 ;姓名：   renyu （变色了）  ;成绩：92.33

完


换行
XML
\n\n 换行
\u3000\u3000  。。。 \n\n 一个段落

设置部分文字点击事件
        ClickableSpan clickableSpan = new ClickableSpan() {
            @Override
            public void onClick(View widget) {
                ToastUitl.showLong("文字点击");
            }
        };
        style.setSpan(clickableSpan, 11, 15, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);//不改变会自动是连接 的蓝色
       // prompt.setText(style);
		//设置部分文字颜色（可选）
        ForegroundColorSpan foregroundColorSpan = new ForegroundColorSpan(context.getResources().getColor(R.color.security));
        style.setSpan(foregroundColorSpan, 21, 25, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);

        //配置给TextView
        prompt.setMovementMethod(LinkMovementMethod.getInstance());//这句后才能点击连接跳转
        prompt.setText(style);
		
		若不要连接下划线
		public abstract class ClickableSpanNLUtils extends ClickableSpan {
		@Override
		public void updateDrawState(TextPaint ds) {
        super.updateDrawState(ds);
        ds.setUnderlineText(false);
		}

}

完

改变字体颜色
1.
注意：new ForegroundColorSpan 这个对象 setSpan 一次就需要一个 这个对象不可复用
      SPAN_EXCLUSIVE_EXCLUSIVE 一般都用这个 只要不涉及字符串插入操作 这个参数设置 4种之一都可以 
	  8,23 为 [开始，结束）的位置 汉字和英文算1 符号算2
SpannableStringBuilder stringBuilder2=new SpannableStringBuilder(hind_two);
stringBuilder2.setSpan(new ForegroundColorSpan(Color.RED),8,23, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
stringBuilder2.setSpan(new ForegroundColorSpan(Color.RED),48,63, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);

2
  textView.setText(stringBuilder2);
  
  
  注意：这种方式设置后 即使最后调用tvDate.setTextColor(Color.BLUE); 也不会改变 8,23 及48,63 的颜色
  
 改变字体大小 
stringBuilderTitle.setSpan(new AbsoluteSizeSpan(20, true), 0, notifyTime.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
 注意：这种方式设置后 即使最后调用tvDate.setTextColor(Color.BLUE); 也不会改变 8,23 及48,63 的大小
 
 完

