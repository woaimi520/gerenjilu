EasyPermission
具体流程看图

rxpermission
配置
app下
    //运行时权限
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
project	下
allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}


  mRxPermissions = RedWineApplication.getFrRxPermission(this);//权限申请
  然后就可以玩了
    申请权限（同时也有判断权限的功能,可以用在 oncreat onstart onclick中）
       mRxPermissions.requestEach(Manifest.permission.WRITE_CONTACTS,Manifest.permission.WRITE_EXTERNAL_STORAGE)
                .subscribe(permission -> {//会返回多大对象
                    if (permission.granted) { // Always true pre-M
                        // I can control the camera now
                        Toast.makeText(this.getContext(), "成功获取到权限", Toast.LENGTH_SHORT).show();
                    } else if(permission.shouldShowRequestPermissionRationale){
                       //拒绝逻辑
                        Toast.makeText(this.getContext(), "未能成功获取权限", Toast.LENGTH_SHORT).show();
                    }else
                        //点击不再显示弹框逻辑
                        Toast.makeText(this.getContext(), "程序需要对应权限 请到设置中开启", Toast.LENGTH_SHORT).show();
                });
				
   检查是否有权限（据说是只能判断运行时权限）
  mRxPermissions.isGranted(Manifest.permission.WRITE_EXTERNAL_STORAGE);//fase 没有权利 true有权限   
  但注意 ACCESS_NOTIFICATION_POLICY不能用这个方法判断
				
扩展：是否再次申请的时候还会弹框？


// RxJava2
 配置 
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.8'
	
	
	
额外的结合 rxbiding	
	
	
	
	
	
	
	
	
	
6.0权限整理
	  一般申请/判断权限的方法
	  ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.CAMERA}, 1);
	  重写得到结果 fragment这里即使覆写也不会回调
	  public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
      
	  6.0以上系统 targetSdkVersion 23以上 可用 
	  但是还是有权限判断会出错 如：ACCESS_NOTIFICATION_POLICY 一直返回的都是0 
	   但是实际上还是不可用 且不会出现同意权限确认弹框 但是会返回结果
	  返回-1 没权限 ，0 有权限 
	  ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA);



