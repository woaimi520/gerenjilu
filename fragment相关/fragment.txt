需要管理相互独立的并且隶属于Activity的Fragment使用FragmentManager（），
而在Fragment中动态的添加Fragment要使用getChildFragmetManager（）来管理。

使用Fragment需要熟悉几个类，包括FragmentActivity、FragmentManager、
 FragmentTranscation，一个FragmentActivity可以包含多个Fragment，谁来管理？
 FragmentManager就起到了作用。做Fragment的增加、删除、替换的时候，
 事务FragmentTranslation 来负责执行。

最基本的初始化
第一种
   public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(initlayout(), container, false); //注意第三个参数 false
        return view;//注意这里是返回view

    }
	
第二种
     public View onCreateView(@NonNull LayoutInflater inflater, 
	 @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(initlayout(), container, true);//这
		里第三个参数为true的时候就直接加载到第二个参数的group中了
		
        ButterKnife.bind(this,view);
        return super.onCreateView(inflater, container, savedInstanceState);//返回的是super 没有返回这个view 

    }
	
fragment的替换
	
FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
fragmentTransaction.add(frameId, fragment);
fragmentTransaction.commit();