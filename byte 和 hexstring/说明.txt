Integer.toHexString(bytes[i] & 0xFF); 
当 byte [] a  = {1}的时候 转化出来就是 1 而不是01

HexString 转 byte的时候可以不区分大小写

Arrays.toString(byte []) 可以将byte转化为10进制显示
如 [1, 2, 3, 4, 5, 6, 7]

编码选UTF-8

    /**
     * hexString转byte数组
     *
     * @param inHex
     * @return
     */
    public static byte[] toBytes(String inHex) {
        if (inHex == null || inHex.trim().equals("")) {
            return new byte[0];
        }

        int hexlen = inHex.length();
        byte[] result;
        if (hexlen % 2 == 1){
            //奇数
            hexlen++;
            result = new byte[(hexlen/2)];
            inHex="0"+inHex;
        }else {
            //偶数
            result = new byte[(hexlen/2)];
        }
        int j=0;
        for (int i = 0; i < hexlen; i+=2){
            result[j]=hexToByte(inHex.substring(i,i+2));
            j++;
        }
        return result;

    }


    /**
     * 接收的byte[]数据转化为HexString
     * @param b
     * @return
     */
    public static String getHexString(byte[] b) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < b.length; i++) {
            String hex = Integer.toHexString(b[i] & 0xFF);
            if (hex.length() == 1) {
                hex = '0' + hex;//// 每个字节由两个字符表示，位数不够，高位补0
            }
            sb.append(hex.toUpperCase());

        }

        return sb.toString();
    }


    public static byte hexToByte(String inHex){
        return (byte)Integer.parseInt(inHex,16);
    }